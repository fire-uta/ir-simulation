<?xml version="1.0"?>
<xs:schema
 targetNamespace="urn:X-fi-uta-sis-fire:qsdl"
 xmlns:qsdl="urn:X-fi-uta-sis-fire:qsdl"
 xmlns:xs="http://www.w3.org/2001/XMLSchema" >

 <xs:complexType name="qsdl">
  <xs:all>
   <xs:element name="actions" type="qsdl:actions" form="qualified" />
   <xs:element name="costs" type="qsdl:costs" form="qualified" />
   <xs:element name="gains" type="qsdl:gains" form="qualified" />
   <xs:element name="decays" type="qsdl:decays" form="qualified" minOccurs="0" />
   <xs:element name="transitions" type="qsdl:trans" form="qualified" />
   <xs:element name="probabilities" type="qsdl:probabilities" form="qualified" />
   <xs:element name="probability-conditions" type="qsdl:probability-conditions" form="qualified" minOccurs="0" />
  </xs:all>
 </xs:complexType>

 <!-- Root element -->
 <xs:element name="qsdl" type="qsdl:qsdl">

  <!-- KEYS: -->

  <xs:key name="action-id">
   <xs:selector xpath="qsdl:actions/qsdl:action" />
   <xs:field xpath="@id" />
  </xs:key>

  <xs:key name="cost-id">
   <xs:selector xpath="qsdl:costs/qsdl:cost" />
   <xs:field xpath="@id" />
  </xs:key>

  <xs:key name="gain-id">
   <xs:selector xpath="qsdl:gains/qsdl:gain" />
   <xs:field xpath="@id" />
  </xs:key>

  <xs:key name="decay-id">
   <xs:selector xpath="qsdl:decays/qsdl:decay" />
   <xs:field xpath="@id" />
  </xs:key>

  <xs:key name="probability-id">
   <xs:selector xpath="qsdl:probabilities/qsdl:probability" />
   <xs:field xpath="@id" />
  </xs:key>

  <xs:key name="condition-id">
   <xs:selector xpath="qsdl:probability-conditions/qsdl:probability-condition" />
   <xs:field xpath="@id" />
  </xs:key>

  <!-- KEY REFERENCES: -->

  <xs:keyref name="cost-reference" refer="qsdl:cost-id">
   <xs:selector xpath="qsdl:actions/qsdl:action" />
   <xs:field xpath="@cost" />
  </xs:keyref>

  <xs:keyref name="gain-reference" refer="qsdl:gain-id">
   <xs:selector xpath="qsdl:actions/qsdl:action" />
   <xs:field xpath="@gain" />
  </xs:keyref>

  <xs:keyref name="decay-reference" refer="qsdl:decay-id">
   <xs:selector xpath="qsdl:transitions/qsdl:from/qsdl:to" />
   <xs:field xpath="@decay" />
  </xs:keyref>

  <xs:keyref name="source-action-reference" refer="qsdl:action-id">
   <xs:selector xpath="qsdl:transitions/qsdl:from" />
   <xs:field xpath="@source" />
  </xs:keyref>
  <xs:keyref name="target-action-reference" refer="qsdl:action-id">
   <xs:selector xpath="qsdl:transitions/qsdl:from/qsdl:to" />
   <xs:field xpath="@target" />
  </xs:keyref>
  <xs:keyref name="probability-reference" refer="qsdl:probability-id">
   <xs:selector xpath="qsdl:transitions/qsdl:from/qsdl:to" />
   <xs:field xpath="@probability" />
  </xs:keyref>

  <xs:keyref name="if-condition-reference" refer="qsdl:condition-id">
   <xs:selector xpath="qsdl:probabilities/qsdl:probability/qsdl:if" />
   <xs:field xpath="@condition" />
  </xs:keyref>
  <xs:keyref name="else-if-condition-reference" refer="qsdl:condition-id">
   <xs:selector xpath="qsdl:probabilities/qsdl:probability/qsdl:else-if" />
   <xs:field xpath="@condition" />
  </xs:keyref>

 </xs:element>

 <!-- Actions element -->
 <xs:complexType name="actions">
  <xs:sequence>
   <xs:element name="action" minOccurs="1" maxOccurs="unbounded" form="qualified" >
    <xs:complexType>
     <xs:sequence>
      <xs:element name="trigger" minOccurs="0" maxOccurs="unbounded" form="qualified">
       <xs:complexType>
        <xs:sequence>
         <xs:element name="argument" minOccurs="0" maxOccurs="unbounded" form="qualified">
          <xs:complexType>
           <xs:attribute name="name" type="xs:string" use="required" />
           <xs:attribute name="value" type="xs:string" use="required" />
          </xs:complexType>
         </xs:element>
        </xs:sequence>
        <xs:attribute name="type" type="xs:string" use="required" />
       </xs:complexType>
      </xs:element>
     </xs:sequence>
     <xs:attribute name="id" type="xs:string" use="required" />
     <xs:attribute name="cost" type="xs:string" use="optional" />
     <xs:attribute name="gain" type="xs:string" use="optional" />
     <xs:attribute name="final" type="xs:boolean" use="optional" default="false" />
    </xs:complexType>
   </xs:element>
  </xs:sequence>
  <xs:attribute name="initial" type="xs:string" use="required" />
 </xs:complexType>

 <!-- Callback or value type (for gains and costs) -->
 <xs:complexType name="callback-or-value">
  <xs:choice>
   <xs:element name="callback" type="qsdl:callback-with-arguments" form="qualified"/>
   <xs:element name="value" type="xs:decimal" form="qualified" />
  </xs:choice>
  <xs:attribute name="id" type="xs:string" use="required" />
 </xs:complexType>

 <!-- Callback type (for probability conditions) -->
 <xs:complexType name="callback">
  <xs:sequence>
   <xs:element name="callback" type="qsdl:callback-with-arguments" minOccurs="1" maxOccurs="1" form="qualified" />
  </xs:sequence>
  <xs:attribute name="id" type="xs:string" use="required" />
 </xs:complexType>

 <!-- Inner callback element type -->
 <xs:complexType name="callback-with-arguments">
  <xs:sequence>
   <xs:element name="argument" minOccurs="0" maxOccurs="unbounded" form="qualified">
    <xs:complexType>
     <xs:attribute name="name" use="required" type="xs:string" />
     <xs:attribute name="value" use="required" type="qsdl:callback-argument-value" />
    </xs:complexType>
   </xs:element>
  </xs:sequence>
  <xs:attribute name="name" use="required" type="xs:string" />
 </xs:complexType>

 <xs:simpleType name="callback-argument-value">
  <xs:union memberTypes="qsdl:callback-argument-value-non-variable qsdl:probability-value-variable" />
 </xs:simpleType>

 <!-- TODO: move to external file, since this is used in both config and qsdl -->
 <xs:simpleType name="callback-argument-value-non-variable">
  <xs:restriction base="xs:string">
   <xs:pattern value="[^$].*" />
  </xs:restriction>
 </xs:simpleType>

 <!-- Costs element type -->
 <xs:complexType name="costs">
  <xs:sequence>
   <xs:element name="cost" minOccurs="1" maxOccurs="unbounded" form="qualified" type="qsdl:callback-or-value" />
  </xs:sequence>
 </xs:complexType>

 <!-- Gains element type -->
 <xs:complexType name="gains">
  <xs:sequence>
   <xs:element name="gain" minOccurs="1" maxOccurs="unbounded" form="qualified" type="qsdl:callback-or-value" />
  </xs:sequence>
 </xs:complexType>

 <!-- Decays element type -->
 <xs:complexType name="decays">
  <xs:sequence>
   <xs:element name="decay" minOccurs="1" maxOccurs="unbounded" form="qualified" type="qsdl:callback" />
  </xs:sequence>
 </xs:complexType>

 <!-- Transitions element -->
 <xs:complexType name="trans">
  <xs:sequence>
   <xs:element name="from" minOccurs="1" maxOccurs="unbounded" form="qualified">
    <xs:complexType>
     <xs:sequence>
      <xs:element name="to" minOccurs="1" maxOccurs="unbounded" form="qualified">
       <xs:complexType>
        <xs:attribute name="target" type="xs:string" use="required" />
        <xs:attribute name="probability" type="xs:string" use="required" />
        <xs:attribute name="decay-effect" type="qsdl:decay-effect" use="optional" default="=" />
       </xs:complexType>
      </xs:element>
     </xs:sequence>
     <xs:attribute name="source" type="xs:string" use="required" />
     <xs:attribute name="decay" type="xs:string" use="optional" />
    </xs:complexType>
   </xs:element>
  </xs:sequence>
 </xs:complexType>

 <!-- Probabilities element -->
 <xs:complexType name="probabilities">
  <xs:sequence>
   <xs:element name="probability" minOccurs="1" maxOccurs="unbounded" form="qualified">
    <xs:complexType>
     <xs:choice>
      <xs:sequence>
       <xs:element name="if" form="qualified">
        <xs:complexType>
         <xs:attribute name="condition" type="xs:string" use="required" />
         <xs:attribute name="negation" type="xs:boolean" use="optional" default="false"/>
         <xs:attribute name="value" type="qsdl:probability-value" use="required" />
        </xs:complexType>
       </xs:element>
       <xs:element name="else-if" minOccurs="0" maxOccurs="unbounded" form="qualified">
        <xs:complexType>
         <xs:attribute name="condition" type="xs:string" use="required" />
         <xs:attribute name="negation" type="xs:boolean" use="optional" default="false"/>
         <xs:attribute name="value" type="qsdl:probability-value" use="required" />
        </xs:complexType>
       </xs:element>
       <xs:element name="else" form="qualified">
        <xs:complexType>
         <xs:attribute name="value" type="qsdl:probability-value" use="required" />
        </xs:complexType>
       </xs:element>
      </xs:sequence>
      <xs:element name="callback" type="qsdl:callback-with-arguments" form="qualified" />
      <xs:element name="value" type="qsdl:probability-value" form="qualified" />
     </xs:choice>
     <xs:attribute name="id" type="xs:string" use="required" />
    </xs:complexType>
   </xs:element>
  </xs:sequence>
 </xs:complexType>

 <!-- Probability conditions element type -->
 <xs:complexType name="probability-conditions">
  <xs:sequence>
   <xs:element name="probability-condition" minOccurs="1" maxOccurs="unbounded" form="qualified" type="qsdl:callback" />
  </xs:sequence>
 </xs:complexType>

 <!-- Probability value can be a decimal number between 0 and 1;
 An asterisk (*) is a special value that means the probability will be
 calculated at run-time. -->
 <xs:simpleType name="probability-value" id="PROB_VAL">
  <xs:union memberTypes="qsdl:probability-value-direct qsdl:probability-value-calculated qsdl:probability-value-variable" />
 </xs:simpleType>

 <!-- TODO: move to external file, since this is used in both config and qsdl -->
 <xs:simpleType name="probability-value-direct">
  <xs:restriction base="xs:decimal">
   <xs:minInclusive value="0.0" />
   <xs:maxInclusive value="1.0" />
  </xs:restriction>
 </xs:simpleType>

 <xs:simpleType name="probability-value-calculated">
  <xs:restriction base="xs:string">
   <xs:enumeration value="*" />
  </xs:restriction>
 </xs:simpleType>

 <!-- TODO: move to external file, since this is used in both config and qsdl -->
 <xs:simpleType name="probability-value-variable">
  <xs:restriction base="xs:string">
   <xs:pattern value="$[A-Za-z0-9]+" />
  </xs:restriction>
 </xs:simpleType>

 <xs:simpleType name="decay-effect">
  <xs:restriction base="xs:string">
   <xs:enumeration value="+" />
   <xs:enumeration value="-" />
   <xs:enumeration value="=" />
  </xs:restriction>
 </xs:simpleType>

</xs:schema>
